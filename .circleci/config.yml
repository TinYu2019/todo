# specify the version key of circleci
version: 2.1

# use orb which contains a set of prepackaged circleci configs we can use to install node.js and package managers
# we use the latest version here
orbs:
  node: circleci/node@5.0.3
  docker: circleci/docker@2.1.4

# create jobs: Build and test the app
jobs:
  build_frontend:
    executor: node/default
    working_directory: ~/project/frontend
    # circleci create a container based on the following image. It contains node.
    docker:
      - image: cimg/node:lts
    steps:
      - checkout:
          path: ~/project
      - node/install-packages
      - run: npm run test
      # start docker engine
      - setup_remote_docker
      # by default cicleci is looking for environment variables and login to docker: DOCKER_LOGIN, DOCKER_PASSWORD and DOCKER_REPOSITORY precisely 
      - docker/check
      # build docker image based on the instructions in the Docker file in the working directory
      - docker/build:
          image: $PRIVATE_REPOSITORY
          tag: frontend-v1
      # once the image is built, push to Dockerhub
      - docker/push:
          image: $PRIVATE_REPOSITORY
          tag: frontend-v1

      # CD 
      # for circleci to connect to remote server via SSH. 
      # it will take our private key from env var and create a file in the container that contains our private key. (format: ed25519)
      - add_ssh_keys:
          fingerprints:
            - "99:14:c2:ce:7e:f9:13:84:11:41:7e:72:bb:f6:b7:8a"
      - run: 
          name: "Server connect to Dockerhub"
          command: ssh $SERVER_SSH_USERNAME@$SERVER_SSH_PUBLIC_IP -p $SERVER_SSH_PORT $SERVER_SSH_OPTIONS "echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin"
      - run: 
          name: "Stop frontend container"
          command: ssh $SERVER_SSH_USERNAME@$SERVER_SSH_PUBLIC_IP -p $SERVER_SSH_PORT $SERVER_SSH_OPTIONS "docker stop $FRONTEND_DOCKER_CONTAINER_NAME | xargs docker rm"
      - run: 
          name: "Run frontend container"
          command: ssh $SERVER_SSH_USERNAME@$SERVER_SSH_PUBLIC_IP -p $SERVER_SSH_PORT $SERVER_SSH_OPTIONS "docker run -d -p $FRONTEND_DOCKER_CONTAINER_PORT:3000 --name $FRONTEND_DOCKER_CONTAINER_NAME $PRIVATE_REPOSITORY:frontend-v1"

# Create a workflow
workflows:
  build_frontend:
    jobs:
      - build_frontend:
        filters:
          branches:
            only: main